version: '3'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3.9.2-debian-12-r11'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - '~/dockerVolumes/bitnami/zookeeper:/bitnami/zookeeper/data'
    networks:
      - kafka-net

  kafka:
    image: 'bitnami/kafka:3.7.1-debian-12-r4'
    ports:
      - '9092:9092'
      - '19092:19092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://127.0.0.1:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - '~/dockerVolumes/bitnami/kafka:/bitnami/kafka/data'
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - '8081:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-poc
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - DYNAMIC_CONFIG_ENABLED=true
    depends_on:
      - kafka
    networks:
      - kafka-net

  postgres:
    image: postgres:16.3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kafka-poc
      POSTGRES_PASSWORD: kafka-poc
      POSTGRES_DB: kafka-poc
    volumes:
      - "~/dockerVolumes/postgres:/var/lib/postgresql/data"

volumes:
  zookeeper-data:
    driver: local
  kafka-data:
    driver: local
  postgres-data:
    driver: local

networks:
  kafka-net:
    driver: bridge